FUNCTION_BLOCK f

VAR_INPUT
closest_particle_in_front : REAL;
particles_left : REAL;
particles_right : REAL;
END_VAR

VAR_OUTPUT
direction_change : REAL;
END_VAR

FUZZIFY closest_particle_in_front
TERM veryClose := (0, 1) (10, 1) (20, 0.50) (30, 0);
TERM close := (10, 0) (20, 0.50) (30, 1) (40, 1) (50, 0.50) (60, 0);
TERM far := (40, 0) (50, 0.50) (60, 1) (70, 1) (80, 0.50) (90, 0);
TERM veryFar := (70, 0) (80, 0.50) (90, 1) (100, 1);
END_FUZZIFY

FUZZIFY particles_left
TERM veryClose := (0, 1) (10, 1) (20, 0.50) (30, 0);
TERM close := (10, 0) (20, 0.50) (30, 1) (40, 1) (50, 0.50) (60, 0);
TERM far := (40, 0) (50, 0.50) (60, 1) (70, 1) (80, 0.50) (90, 0);
TERM veryFar := (70, 0) (80, 0.50) (90, 1) (100, 1);
END_FUZZIFY

FUZZIFY particles_right
TERM veryClose := (0, 1) (10, 1) (20, 0.50) (30, 0);
TERM close := (10, 0) (20, 0.50) (30, 1) (40, 1) (50, 0.50) (60, 0);
TERM far := (40, 0) (50, 0.50) (60, 1) (70, 1) (80, 0.50) (90, 0);
TERM veryFar := (70, 0) (80, 0.50) (90, 1) (100, 1);
END_FUZZIFY

DEFUZZIFY direction_change
TERM hardLeft := (0, 1) (1, 1) (2, 0.50) (3, 0);
TERM left := (1, 0) (2, 0.50) (3, 1) (4, 1) (5, 0.50) (6, 0);
TERM stay := (4, 0) (5, 0.50) (6, 1) (7, 1) (8, 0.50) (9, 0);
TERM right := (7, 0) (8, 0.50) (9, 1) (10, 1) (11, 0.50) (12, 0);
TERM hardRight := (10, 0) (11, 0.50) (12, 1) (13, 1);
METHOD : COG;
DEFAULT := 0.5;
END_DEFUZZIFY
RULEBLOCK first
AND: MIN;
OR: MAX;
ACT: MIN;

RULE 0: IF closest_particle_in_front IS veryClose THEN direction_change IS stay;

RULE 1: IF closest_particle_in_front IS close AND particles_left IS veryClose THEN direction_change IS left;
RULE 2: IF closest_particle_in_front IS close AND particles_left IS NOT veryClose AND particles_right IS veryClose THEN direction_change IS right;
RULE 3: IF closest_particle_in_front IS close AND particles_left IS NOT veryClose AND particles_right IS NOT veryClose THEN direction_change IS stay;

RULE 4: IF closest_particle_in_front IS far AND particles_left IS veryClose THEN direction_change IS hardLeft;
RULE 5: IF closest_particle_in_front IS far AND particles_left IS NOT veryClose AND particles_right IS veryClose THEN direction_change IS hardRight;
RULE 6: IF closest_particle_in_front IS far AND particles_left IS close THEN direction_change IS left;
RULE 7: IF closest_particle_in_front IS far AND particles_left IS far AND particles_right IS close THEN direction_change IS right;
RULE 8: IF closest_particle_in_front IS far AND particles_left IS veryFar AND particles_right IS close THEN direction_change IS right;
RULE 9: IF closest_particle_in_front IS far AND particles_left IS far AND particles_right IS far THEN direction_change IS stay;
RULE 10: IF closest_particle_in_front IS far AND particles_left IS veryFar AND particles_right IS far THEN direction_change IS stay;
RULE 11: IF closest_particle_in_front IS far AND particles_left IS far AND particles_right IS veryFar THEN direction_change IS stay;
RULE 12: IF closest_particle_in_front IS far AND particles_left IS veryFar AND particles_right IS veryFar THEN direction_change IS stay;

RULE 13: IF closest_particle_in_front IS veryFar AND particles_left IS veryClose THEN direction_change IS hardLeft;
RULE 14: IF closest_particle_in_front IS veryFar AND particles_left IS NOT veryClose AND particles_right IS veryClose THEN direction_change IS hardRight;
RULE 15: IF closest_particle_in_front IS veryFar AND particles_left IS close THEN direction_change IS hardLeft;
RULE 16: IF closest_particle_in_front IS veryFar AND particles_left IS far AND particles_right IS close THEN direction_change IS hardRight;
RULE 17: IF closest_particle_in_front IS veryFar AND particles_left IS veryFar AND particles_right IS close THEN direction_change IS hardRight;
RULE 17: IF closest_particle_in_front IS veryFar AND particles_left IS far AND particles_right IS far THEN direction_change IS left;
RULE 18: IF closest_particle_in_front IS veryFar AND particles_left IS veryFar AND particles_right IS far THEN direction_change IS right;
RULE 19: IF closest_particle_in_front IS veryFar AND particles_left IS far AND particles_right IS veryFar THEN direction_change IS left;
RULE 20: IF closest_particle_in_front IS veryFar AND particles_left IS veryFar AND particles_right IS veryFar THEN direction_change IS hardLeft;



END_RULEBLOCK
END_FUNCTION_BLOCK